{"version":3,"sources":["flexible.js","./src/js/flexible.js"],"names":["webpackJsonp","module","exports","require","win","lib","refreshRem","width","docEl","getBoundingClientRect","dpr","rem","style","fontSize","flexible","tid","doc","document","documentElement","metaEl","querySelector","flexibleEl","scale","console","warn","match","getAttribute","parseFloat","parseInt","content","initialDpr","maximumDpr","toFixed","isIPhone","navigator","appVersion","devicePixelRatio","setAttribute","createElement","firstElementChild","appendChild","wrap","write","innerHTML","addEventListener","clearTimeout","setTimeout","e","persisted","readyState","body","rem2px","d","val","this","px2rem","window"],"mappings":"AAAAA,cAAc,EAAE,IAEV,SAASC,EAAQC,EAASC,ICF/B,SAAAC,EAAAC,GAmED,QAAAC,KACA,GAAAC,GAAAC,EAAAC,wBAAAF,KACAA,GAAAG,EAAA,MACAH,EAAA,IAAAG,EAEA,IAAAC,GAAAJ,EAAA,EACAC,GAAAI,MAAAC,SAAAF,EAAA,KACAG,EAAAH,IAAAP,EAAAO,MAzEA,GAMAI,GANAC,EAAAZ,EAAAa,SACAT,EAAAQ,EAAAE,gBACAC,EAAAH,EAAAI,cAAA,yBACAC,EAAAL,EAAAI,cAAA,yBACAV,EAAA,EACAY,EAAA,EAEAR,EAAAT,EAAAS,WAAAT,EAAAS,YAEA,IAAAK,EAAA,CACAI,QAAAC,KAAA,sBACA,IAAAC,GAAAN,EAAAO,aAAA,WAAAD,MAAA,2BACAA,KACAH,EAAAK,WAAAF,EAAA,IACAf,EAAAkB,SAAA,EAAAN,QAEK,IAAAD,EAAA,CACL,GAAAQ,GAAAR,EAAAK,aAAA,UACA,IAAAG,EAAA,CACA,GAAAC,GAAAD,EAAAJ,MAAA,0BACAM,EAAAF,EAAAJ,MAAA,yBACAK,KACApB,EAAAiB,WAAAG,EAAA,IACAR,EAAAK,YAAA,EAAAjB,GAAAsB,QAAA,KAEAD,IACArB,EAAAiB,WAAAI,EAAA,IACAT,EAAAK,YAAA,EAAAjB,GAAAsB,QAAA,MAKA,IAAAtB,IAAAY,EAAA,CACA,GACAW,IADA7B,EAAA8B,UAAAC,WAAAV,MAAA,aACArB,EAAA8B,UAAAC,WAAAV,MAAA,aACAW,EAAAhC,EAAAgC,gBAIA1B,GAHAuB,EAEAG,GAAA,KAAA1B,MAAA,GACA,EACa0B,GAAA,KAAA1B,MAAA,GACb,EAEA,EAIA,EAEAY,EAAA,EAAAZ,EAIA,GADAF,EAAA6B,aAAA,WAAA3B,IACAS,EAIA,GAHAA,EAAAH,EAAAsB,cAAA,QACAnB,EAAAkB,aAAA,mBACAlB,EAAAkB,aAAA,2BAAAf,EAAA,mBAAAA,EAAA,mBAAAA,EAAA,sBACAd,EAAA+B,kBACA/B,EAAA+B,kBAAAC,YAAArB,OACS,CACT,GAAAsB,GAAAzB,EAAAsB,cAAA,MACAG,GAAAD,YAAArB,GACAH,EAAA0B,MAAAD,EAAAE,WAcAvC,EAAAwC,iBAAA,oBACAC,aAAA9B,GACAA,EAAA+B,WAAAxC,EAAA,OACK,GACLF,EAAAwC,iBAAA,oBAAAG,GACAA,EAAAC,YACAH,aAAA9B,GACAA,EAAA+B,WAAAxC,EAAA,QAEK,GAEL,aAAAU,EAAAiC,WACAjC,EAAAkC,KAAAtC,MAAAC,SAAA,GAAAH,EAAA,KAEAM,EAAA4B,iBAAA,4BAAAG,GACA/B,EAAAkC,KAAAtC,MAAAC,SAAA,GAAAH,EAAA,OACS,GAITJ,IAEAQ,EAAAJ,IAAAN,EAAAM,MACAI,EAAAR,aACAQ,EAAAqC,OAAA,SAAAC,GACA,GAAAC,GAAA1B,WAAAyB,GAAAE,KAAA3C,GAIA,OAHA,gBAAAyC,MAAA3B,MAAA,UACA4B,GAAA,MAEAA,GAEAvC,EAAAyC,OAAA,SAAAH,GACA,GAAAC,GAAA1B,WAAAyB,GAAAE,KAAA3C,GAIA,OAHA,gBAAAyC,MAAA3B,MAAA,SACA4B,GAAA,OAEAA,IAGCG,cAAA,MAAAA,OAAA","file":"flexible.js","sourcesContent":["webpackJsonp([0,3],[\n/* 0 */\n/***/ function(module, exports, require) {\n\n\t;(function(win, lib) {\n\t    var doc = win.document;\n\t    var docEl = doc.documentElement;\n\t    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n\t    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n\t    var dpr = 0;\n\t    var scale = 0;\n\t    var tid;\n\t    var flexible = lib.flexible || (lib.flexible = {});\n\t\n\t    if (metaEl) {\n\t        console.warn('将根据已有的meta标签来设置缩放比例');\n\t        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n\t        if (match) {\n\t            scale = parseFloat(match[1]);\n\t            dpr = parseInt(1 / scale);\n\t        }\n\t    } else if (flexibleEl) {\n\t        var content = flexibleEl.getAttribute('content');\n\t        if (content) {\n\t            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n\t            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n\t            if (initialDpr) {\n\t                dpr = parseFloat(initialDpr[1]);\n\t                scale = parseFloat((1 / dpr).toFixed(2));\n\t            }\n\t            if (maximumDpr) {\n\t                dpr = parseFloat(maximumDpr[1]);\n\t                scale = parseFloat((1 / dpr).toFixed(2));\n\t            }\n\t        }\n\t    }\n\t\n\t    if (!dpr && !scale) {\n\t        var isAndroid = win.navigator.appVersion.match(/android/gi);\n\t        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n\t        var devicePixelRatio = win.devicePixelRatio;\n\t        if (isIPhone) {\n\t            // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n\t            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n\t                dpr = 3;\n\t            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n\t                dpr = 2;\n\t            } else {\n\t                dpr = 1;\n\t            }\n\t        } else {\n\t            // 其他设备下，仍旧使用1倍的方案\n\t            dpr = 1;\n\t        }\n\t        scale = 1 / dpr;\n\t    }\n\t\n\t    docEl.setAttribute('data-dpr', dpr);\n\t    if (!metaEl) {\n\t        metaEl = doc.createElement('meta');\n\t        metaEl.setAttribute('name', 'viewport');\n\t        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n\t        if (docEl.firstElementChild) {\n\t            docEl.firstElementChild.appendChild(metaEl);\n\t        } else {\n\t            var wrap = doc.createElement('div');\n\t            wrap.appendChild(metaEl);\n\t            doc.write(wrap.innerHTML);\n\t        }\n\t    }\n\t\n\t    function refreshRem(){\n\t        var width = docEl.getBoundingClientRect().width;\n\t        if (width / dpr > 540) {\n\t            width = 540 * dpr;\n\t        }\n\t        var rem = width / 10;\n\t        docEl.style.fontSize = rem + 'px';\n\t        flexible.rem = win.rem = rem;\n\t    }\n\t\n\t    win.addEventListener('resize', function() {\n\t        clearTimeout(tid);\n\t        tid = setTimeout(refreshRem, 300);\n\t    }, false);\n\t    win.addEventListener('pageshow', function(e) {\n\t        if (e.persisted) {\n\t            clearTimeout(tid);\n\t            tid = setTimeout(refreshRem, 300);\n\t        }\n\t    }, false);\n\t\n\t    if (doc.readyState === 'complete') {\n\t        doc.body.style.fontSize = 12 * dpr + 'px';\n\t    } else {\n\t        doc.addEventListener('DOMContentLoaded', function(e) {\n\t            doc.body.style.fontSize = 12 * dpr + 'px';\n\t        }, false);\n\t    }\n\t\n\t\n\t    refreshRem();\n\t\n\t    flexible.dpr = win.dpr = dpr;\n\t    flexible.refreshRem = refreshRem;\n\t    flexible.rem2px = function(d) {\n\t        var val = parseFloat(d) * this.rem;\n\t        if (typeof d === 'string' && d.match(/rem$/)) {\n\t            val += 'px';\n\t        }\n\t        return val;\n\t    }\n\t    flexible.px2rem = function(d) {\n\t        var val = parseFloat(d) / this.rem;\n\t        if (typeof d === 'string' && d.match(/px$/)) {\n\t            val += 'rem';\n\t        }\n\t        return val;\n\t    }\n\t\n\t})(window, window['lib'] || (window['lib'] = {}));\n\n\n/***/ }\n])",";(function(win, lib) {\n    var doc = win.document;\n    var docEl = doc.documentElement;\n    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n    var dpr = 0;\n    var scale = 0;\n    var tid;\n    var flexible = lib.flexible || (lib.flexible = {});\n\n    if (metaEl) {\n        console.warn('将根据已有的meta标签来设置缩放比例');\n        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n        if (match) {\n            scale = parseFloat(match[1]);\n            dpr = parseInt(1 / scale);\n        }\n    } else if (flexibleEl) {\n        var content = flexibleEl.getAttribute('content');\n        if (content) {\n            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n            if (initialDpr) {\n                dpr = parseFloat(initialDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n            if (maximumDpr) {\n                dpr = parseFloat(maximumDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n        }\n    }\n\n    if (!dpr && !scale) {\n        var isAndroid = win.navigator.appVersion.match(/android/gi);\n        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n        var devicePixelRatio = win.devicePixelRatio;\n        if (isIPhone) {\n            // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n                dpr = 3;\n            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                dpr = 2;\n            } else {\n                dpr = 1;\n            }\n        } else {\n            // 其他设备下，仍旧使用1倍的方案\n            dpr = 1;\n        }\n        scale = 1 / dpr;\n    }\n\n    docEl.setAttribute('data-dpr', dpr);\n    if (!metaEl) {\n        metaEl = doc.createElement('meta');\n        metaEl.setAttribute('name', 'viewport');\n        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n        if (docEl.firstElementChild) {\n            docEl.firstElementChild.appendChild(metaEl);\n        } else {\n            var wrap = doc.createElement('div');\n            wrap.appendChild(metaEl);\n            doc.write(wrap.innerHTML);\n        }\n    }\n\n    function refreshRem(){\n        var width = docEl.getBoundingClientRect().width;\n        if (width / dpr > 540) {\n            width = 540 * dpr;\n        }\n        var rem = width / 10;\n        docEl.style.fontSize = rem + 'px';\n        flexible.rem = win.rem = rem;\n    }\n\n    win.addEventListener('resize', function() {\n        clearTimeout(tid);\n        tid = setTimeout(refreshRem, 300);\n    }, false);\n    win.addEventListener('pageshow', function(e) {\n        if (e.persisted) {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }\n    }, false);\n\n    if (doc.readyState === 'complete') {\n        doc.body.style.fontSize = 12 * dpr + 'px';\n    } else {\n        doc.addEventListener('DOMContentLoaded', function(e) {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        }, false);\n    }\n\n\n    refreshRem();\n\n    flexible.dpr = win.dpr = dpr;\n    flexible.refreshRem = refreshRem;\n    flexible.rem2px = function(d) {\n        var val = parseFloat(d) * this.rem;\n        if (typeof d === 'string' && d.match(/rem$/)) {\n            val += 'px';\n        }\n        return val;\n    }\n    flexible.px2rem = function(d) {\n        var val = parseFloat(d) / this.rem;\n        if (typeof d === 'string' && d.match(/px$/)) {\n            val += 'rem';\n        }\n        return val;\n    }\n\n})(window, window['lib'] || (window['lib'] = {}));\n"],"sourceRoot":"webpack-module://"}